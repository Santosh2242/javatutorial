<resources>
    <string name="app_name">Learn Java Tutorial</string>
    <string name="History_of_Java">Java ये Computer Language का  Sun Microsystem इस company के अंतर्गत  James Gosling ने अविष्कार किया |Java का पहला नाम  Oak इस पेड़ से रखा गया | ये रखने का मतलब  James Gosling और उनके सहकारी जहा पर Java के लिए काम करते थे, वहा पर  Oak का पेड़ था और Oak ये कई देशों का राष्ट्रीय पेड़ भी है | इसी लिए  Oak ये नाम रखा गया | ये  Oak नाम 1991 में रखा गया | लेकिन ये  Oak नाम पहले से ही  Oak Technologies का था |उसके बाद  Oak का नाम बदलकर  Java रखा गया | Java ये नाम रखने की एक ही वजह थी कि, जब  James Gosling और उनके सहकारी जब काम करते थे तब  Java नाम के बीज की Indonesian coffee पीते थे और Java ये नाम काफी नया भी था | इसीलिए Java नाम रखा गया |अभी 2010 में Sun Microsystem ने  Oracle को ये बेच दी|</string>
    <string name="Introduction_of_Java">Java ये दुनिया भर में बहुत ही प्रसिध्द programming Language है | Java के लिए तीन प्रकार बनाये गए है | Java SE (Standard Edition) Java EE (Enterprise Edition) Java ME (Micro Edition)1. Java SE Java SE ये Basic Programming के लिए इस्तेमाल किया जाता है, इसे Core Java भी कहा जाता है | 2. Java EE Java EE ये Advanced Programminng है , इसे Advanced Java भी कहते है | 3. Java ME Java ME ये mobile programming के लिए उपयुक्त है, लेकिन इसका android से कोई सम्बन्ध नहीं है | Java का जब प्रारंभ हुआ तब उसे मुफ्त किया गया था और वर्त्तमान और भविष्य में भी मुफ्त रहेगा | Java का एक और महत्व है ये Write Once, Run Anywhere है, इसका मतलब ये किसी भी mobile-based, windows-based और web-based Application पर चलाया जाता है |</string>
    <string name="Java_Feature">Java Programming के लिए बहुत सारे Features के साथ बनाई गयी है | जैसे कि,Simple Secure Object-Oriented Independant Portable Robust Interpreted Multitreaded High Performance Distributed Simple : ये Language C++ से कुछ समान है | जो भी User C++ से अच्छा ज्ञान प्राप्त करता है, उसे Java सिखने में भी कोई दिक्कत नहीं होती | Secure : ये Language C और C++ से भी ज्यादा secured है | ये Langauge virus-free Langauge है | Object-Oriented : ये Language Class-based और Object-based है | Independant : ये Language independant है , अगर कोई software बनाना हो तो इसे किसी चीज की जरुरत नहीं होती | Portable : इस Language को किसी भी platform पर Run किया जा सकता है | Robust : ये Language और इसका Memory Management बहुत ही मजबूत है | interpreted : ये Language एक interpreted Language है |Multitreaded : इस Language में एक से ज्यादा programs को एक साथ Run किया जा सकता है | High Performance : Java के Compilers program execution के लिए ज्यादा समय नहीं लेते, इसीलिए ये एक High-performing Langauge मानी जाती है | Distributed : Java के बनाये हुई program को एक से दुसरे computer पर distribute किया जाता है |</string>

    <string name="Type_of_dataType">Data types विभिन्न आकारों और values को specify करते हैं जिन्हें variable में संग्रहीत किया जा सकता है। जावा में दो प्रकार के data types हैं:Primitive data types: primitive data types में boolean, char, byte, short, int, long, float और double शामिल हैं। Non-primitive data types: non-primitive डेटा types में classes, interface और Arrays शामिल हैं।</string>
    <string name="types_of_varible">Java के लिए Variables के तीन प्रकार होते है | Local Variable Instance Variable Static Variable 1. Local Variable Local Variables block, methods और constructor के अन्दर होते है |Local Variable का scope; local होता है | ये सिर्फ methods और constructor के अन्दर visible होते है |जब Local Variables; methods और constructor के बाहर जाते है, तब destroyed हो जाते है |2. Instance Variable Instance Variables; class के अन्दर होते है और methods और constructor के बाहर होते है | Instance Variables non-static variables होते है | 3. Static Variable Static Variables को Class Variables भी कहते है | ये Instance Variable के तरह class के अन्दर और methods और constructor के बाहर होते है | static keyword के साथ इनका इस्तेमाल किया जाता है |</string>

    <string name="operator">जावा में operator एक symbol है जिसका उपयोग operations perform करने के लिए किया जाता है। उदाहरण के लिए: +, -, *, / आदि। जावा में कई प्रकार के operators हैं जो नीचे दिए गए हैं:</string>
    <string name="types_of_operator">Unary Operator, Arithmetic Operator, Shift Operator, Relational Operator, Bitwise Operator, Logical Operator, Ternary Operator and Assignment Operator</string>

    <string name="condition">प्रोग्रामिंग भाषा में, प्रोग्राम के execution के flow को नियंत्रित करने के लिए जो स्टेटमेंट्स या structures प्रयोग किये जाते है उन्हें control statements(structures) कहते है. control statements दो प्रकार के होते है:- 1:-conditional statements 2:-loop statements</string>
    <string name="if_statement">if statement एक control statement है जिसका प्रयोग एक विशेष कंडीशन को test करने के लिए किया जाता है. इसमें कंडीशन केवल एक बार execute होती है जब कंडीशन सत्य होती है. syntax-if(condition){statements}</string>
    <string name="switchStatement">switch statement एक multi-way branch स्टेटमेंट है. यह statement भी एक selection स्टेटमेंट जो कि एक प्रोग्राम के execution के लिए विभिन्न paths को डिफाइन करता है. यह if-else स्टेटमेंट के लिए विकल्प के तौर पर कार्य करता है.syntax:- switch(variable){ case constant 1; statements(s); break: case constant 2; statement(s); break; case constant 3; statement(s); break; ———– default statement(s); }</string>
    <string name="loops">loops के द्वारा हम किसी एक स्टेटमेंट या बहुत सारें स्टेटमेंट्स को एक से ज्यादा बार execute कर सकते है जब तक कि condition को प्राप्त नहीं कर लिया जाता.loops स्टेटमेंट निम्लिखित प्रकार के होते है:- 1:-while loop 2:-do-while loop 3:-for loop</string>

    <string name="arrays">array एक non-primitive तथा linear डेटा स्ट्रक्चर है जो कि एकसमान(similar) डेटा items का समूह होता है, अर्थात यह सिर्फ एक ही प्रकार के डेटा को ही स्टोर करेगा ( या तो यह सिर्फ सभी integer डेटा को स्टोर करेगा या फिर सभी floating point को )। Array डेटा स्ट्रक्चर का प्रयोग डेटा ऑब्जेक्ट्स के समूह को संग्रहित करने के लिये किया जाता है। Arrays एक static डेटा स्ट्रक्चर है अर्थात् हम केवल compile time में ही मेमोरी को allocate कर सकते है और इसे run-time में बदल नही सकते है।</string>
    <string name="types_of_array">Arrays निम्नलिखित तीन प्रकार का होता है:- 1:- one dimensional arrays. 2:- two dimensional arrays. 3:- Multi dimensional arrays</string>
    <string name="Strings">String ये Java के लिए एक Non-primitive Data Type होता है | String; एक से अधिक characters का group होता है | String को double quotes(" ") के अन्दर लिखा जाता है |nString ये class; java.lang इस package में define होता है | C और C++ में String के लिए character data type और array का इस्तेमाल किया जाता था | लेकिन Java में String के object को create किया जाता है | Java में भी C और C++ के जैसे String को create किया जाता है |</string>

    <string name="Exception">जब program execution के वक्त कोई problem आ जाता है, तो उसे Exception कहते है | Exception ये runtime पर आता है | Java में दो प्रकार के Errors होते है | Compile-Time Error Run-Time Error Compile-Time Error : ये एक normal Errors है जो Compiler द्वारा आ जाता है | जब Program में कही syntax में, कही curly brace, semi-colon या comma नहीं दिया आता है, तो ये Compile-Time पर Error occur होता है | Run-Time Error : यहाँ Program successfully run होता है | लेकिन कुछ ऐसी internal errors आ जाती है, जो interpreter द्वारा दी जाती है | इससे Program भी बंद हो जाता है | Exception के बारे में देखे तो, जब Program compile-time पर successfully run होता है, तो program में कुछ statements ऐसे होते कि वो Compiler द्वारा execute नहीं होते है, उसी वक्त interpreter द्वारा उस statements के सम्बंधित वो एक object create करता है, जब object create किया जाता है, तब interpreter द्वारा Run-Time पर उसे throw किया जाता है | इससे ये समझ आता है कि, जब भी कभी ऐसी condition program में आती है, तब Exception Handling का इस्तेमाल Program में किया जाता है |</string>
    <string name="Ekeyword">Exception Handling के लिए java में पांच keywords का इस्तेमाल किया जाता है | try catch finally throw throws</string>

    <string name="Classes">Java एक object-oriented programming लैंग्वेज है. जावा में class और objects का प्रयोग करके program को design किया जाता है. ऑब्जेक्ट एक physical entity के साथ-साथ logical entity भी होती है जबकि क्लास केवल एक logical entity होती है. उदाहरण के लिए- real life में, Car एक object है. car के पास attributes होते है जैसे:- color और size. और इसकी methods होती है जैसे कि- drive और brake.</string>
    <string name="Class">Class एक user के द्वारा define किया हुआ prototype होता है जिसमें से objects को create किया जाता है. दूसरे शब्दों में कहें तो, “एक क्लास objects का एक समूह होता है जिसमें एकसमान properties होती हैं. यह एक blueprint होता है जिसमें से objects को create किया जाता है. यह एक logical entity है. यह physical नहीं हो सकती.” Rules for Java Class (जावा क्लास के नियम) – सामन्यतया java में एक class को declare करने पर निम्नलिखित बातों का पालन किया जाता है. Modifiers – एक class के पास केवल public या default access हो सकता है. (access modifiers को पूरा पढने के लिए क्लिक करें.) class keyword – एक class को create करने के लिए class keyword का प्रयोग किया जाता है. Class name – इसका नाम capital letter से शुरू होना चाहिए. Superclass (parent class) – एक class केवल एक ही parent class को extend कर सकती है. इसके लिए extends कीवर्ड का प्रयोग किया जाता है. Body – class की body, curlybraces {} के अंदर होती है. curlybraces के अंदर variables और methods होते हैं.</string>
    <string name="object">एक Object, क्लास का एक instance (उदाहरण) होता है. object, क्लास को represent करता है. दूसरे शब्दों में कहें तो, “एक ऐसी entity जिसका state और behaviour होता है उसे object कहा जाता है. उदाहरण के लिए- car, pen, table, chair, bike और mobile आदि. यह physical या logical हो सकता है.” एक object में निम्नलिखित विशेषताएं होती है:- State – यह object के attributes के द्वारा represent होता है. यह object की properties को भी प्रस्तुत करता है. Behaviour – यह object के methods के द्वारा प्रस्तुत होता है. Identity – यह object को एक यूनिक name देता है और एक object को दूसरे objects के साथ interact करने योग्य बनाता है. Real world में, mobile phone एक object है और color, cost, और name आदि इसकी properties है, जबकि इसका behaviour है:- calling, chatting आदि. तो इसलिए हम कह सकते है कि object एक real world entity है.</string>

    <string name="Inheritance">Java में Inheritance ये Object Oriented Programming का एक प्रकार है | जिसमे एक class की properties और methods किसी दुसरे class में inherit की जाती है |nheritance में मुख्यतः Parent class और child class का इस्तेमाल किया जाता है | इसमे Parent class को Base class या super class भी कहा जाता है और Child class को Derived class या sub class भी कहा जाता है | C++ ये Inheritance के प्रकार को support करता है, लेकिन Java; Multiple Inheritance को support नहीं करता मतलब Java में Parent class को कई child classes हो सकते है, लेकिन child classes को सिर्फ एक ही Parent class होता है |</string>
    <string name="Types_of_inheritance">Java में तीन Inheritance होते है | 1.Single Inheritance 2. MultiLevel Inheritance 3. Hierarchical Inheritance</string>

    <string name="polymorphism">Polymorphism ये Object Oriented Programming का बहुत ही अच्छा feature है | एक ही रूप में अनेक रूप होना polymorphism होता है |Polymorphism ये शब्द poly और morph इन दो शब्दों को मिलकर बनाया गया है |</string>
    <string name="polyExample">Real life में smartphones की कई कंपनियां है | जब smartphone इस्तेमाल किया जाता है, तब उस mobile में कई सारे features होते है जैसे Camera, Calling, Music Player, Video Player. यहाँ पर mobile ये नाम तो एक ही है लेकिन इसमें कई सारे forms है |</string>
    <string name="types_of_polymorphism">Java में Polymorphism के लिए दो प्रकार है | 1. Compile-Time Polymorphism 2.Run-Time Polymorphism</string>
    <string name="method_overloading">Method Overloading में एक class पर एक ही नाम के multiple method हो सकते है | लेकिन उन methods की arguments की संख्या और उनका type अलग-अलग होता है | Program पर Constructor Overloading भी किया जाता है | Method Overloading का return-type से कोई लेना-देना नहीं होता | For eg. अगर program में एक class के अन्दर same signature के दो methods होते है तो Ambiguity Error आ जाता है , चाहे उनका return-type अलग हो या ना हो | इसका मतलब ये है कि, return-type से Method Overloading का कोई सम्बन्ध नहीं है |</string>
    <string name="methon_overrriding">Method Overriding में एक program पर same name के methods होते है | इन methods की signature एक जैसी ही होती है | लेकिन ये अलग-अलग class में स्थित होते है | For eg. अगर parent class का method और उसके sub-class का method का नाम और signature एक जैसा हो तो उसे Method Overriding कहते है | Method Overriding ये RunTime Polymorphism का एक अच्छा उदाहरण है |</string>

    <string name="encapsulation">Data Encapsulation में data members और methods एक ही unit पर या class पर wrap करके रखा जाता है | Data Encapsulation class के attributes और methods को combine करके रखता है | Data Encapsulation को Data Hiding भी कहा जाता है, चूँकि इसमे जो instance variables होते है, वो private होते है | इसका मतलब ये है , अगर इसे outside से access किये जाए तो ये accessible नहीं होते | Normally Encapsulation में जो methods इस्तेमाल की जाती है उनका उल्लेख getter और setter होता है | Encapsulation में data members और methods की accessibility(Access Modifiers) भी काफी प्रभावित करती है | Program पर देखे तो , तीन private data members किये गए है | ये members सिर्फ अपने class के लिए ही accessible होंगे, ये outside से या किसी दूसरी class से access नहीं किये जा सकते | बाद में तीन public getter और तीन setter लिए गए है | ये public होने के कारण outside से भी इन methods को access किया जा सकता है | जो private data members वहा पर दिए गए है, वो public methods के माध्यम से ही accessible रहेंगे |</string>
    <string name="encapProfit">Encapsulation का code flexible होता है चूँकि Requirement के हिसाब से code को change किया जा सकता है | Encapsulation में data की accessibility को control किया जाता है | Encapsulation में code की maintainability और reusability बढाई जाती है |</string>
    <string name="interfaces">interface ये class के जैसे होते है | interface जो methods होते है, वो abstract होते है और उनका scope public होता है | interface का कोई object create नहीं किया जा सकता, लेकिन reference variable create किया जा सकता है | interface में जो methods होते है, उनका सिर्फ declaration किया जाता है |interface में जब instance variable को intialized किया जाता है, तब उसके साथ by default compiler द्वारा public static final ये keywords आ जाते है | interface को implement करने के लिए class के जरिये implements keyword का इस्तेमाल किया जाता है | interface में constructor नहीं होते |</string>

    <string name="enumeration">Enumeration के लिए enum keyword का इस्तेमाल किया जाता है | Enumeration ये constants की list होती है | Enumeration में instance variable, methods और constructor होते है |Enumeration; class और interface क जैसा होता है | हर enumeration के constant के साथ static और final keyword होता है | Defining enum यहाँ पर Planet ये enumeration का type है और EARTH, MOON, JUPITER और SATURN उसके constants है | Constants को comma operators से seperate किया जाता है |</string>
    <string name="multithread">Java में, multithreading एक प्रक्रिया है जिसके द्वारा हम बहुत सारें threads को एक साथ execute कर सकते हैं. इससे CPU का अधिकतम utilization (उपयोग) होता है. एक thread, प्रोसेसिंग का सबसे छोटा और lightweight sub-process होता है. Thread एक दूसरे से independent (स्वतंत्र) होते है क्योंकि उनके execution का path अलग होता है. अगर कभी किसी thread में कोई exception आ भी गया तो, उससे दूसरे threads को कोई प्रभाव नहीं पड़ता. Multithreading का उपयोग multitasking को प्राप्त (achieve) करने के लिए किया जाता है. इसका प्रयोग ज्यादातर games और animation को create करने में किया जाता है.</string>
</resources>